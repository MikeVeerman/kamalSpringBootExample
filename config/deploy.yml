#file: noinspection YAMLSchemaValidation
service: kamal-spring-boot-example

image: mikeveerman/kamalspringbootexample

env:
  secret:
    - POSTGRES_DB
    - POSTGRES_USER
    - POSTGRES_PASSWORD
    - POSTGRES_HOST

servers:
  web:
    hosts:
      - 195.201.5.42
    labels:
      traefik.http.routers.nonectkamalexample.rule: Host(`kamalspringboot.nonect.com`)
      traefik.http.routers.nonectkamalexample_secure.entrypoints: websecure
      traefik.http.routers.nonectkamalexample_secure.rule: Host(`kamalspringboot.nonect.com`)
      traefik.http.routers.nonectkamalexample_secure.tls: true
      traefik.http.routers.nonectkamalexample_secure.tls.certresolver: letsencrypt

registry:
  server: ghcr.io
  username: MikeVeerman
  password:
    - GITHUB_REGISTRY_PASSWORD

accessories:
  db:
    image: postgres:14.0
    roles:
      - web
    port: 5432
    env:
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DB

traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: "mike@nonect.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
   path: /actuator/health
   port: 8080
   max_attempts: 20
   interval: 10s
